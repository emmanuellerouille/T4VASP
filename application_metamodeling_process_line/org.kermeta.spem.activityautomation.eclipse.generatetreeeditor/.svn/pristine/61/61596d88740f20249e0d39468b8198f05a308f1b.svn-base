package org.kermeta.spem.activityautomation.eclipse.createtreeconcretesyntax;

import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

import org.eclipse.core.resources.IContainer;
import org.eclipse.core.resources.IWorkspace;
import org.eclipse.core.resources.ResourcesPlugin;
import org.eclipse.emf.codegen.ecore.genmodel.presentation.GenModelEditor;
import org.eclipse.emf.ecore.presentation.EcoreModelWizard;
import org.eclipse.jface.action.IAction;
import org.eclipse.jface.dialogs.InputDialog;
import org.eclipse.jface.dialogs.MessageDialog;
import org.eclipse.jface.viewers.ISelection;
import org.eclipse.jface.viewers.IStructuredSelection;
import org.eclipse.jface.viewers.StructuredSelection;
import org.eclipse.jface.wizard.WizardDialog;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.ui.IObjectActionDelegate;
import org.eclipse.ui.IWorkbenchPart;
import org.eclipse.ui.IWorkbenchWindow;
import org.eclipse.ui.PlatformUI;


public class CreateTreeConcreteSyntax implements IObjectActionDelegate {

	private IStructuredSelection selection;
	private IWorkbenchPart targetPart;
	private IContainer modelContainer;

	@Override
	public void run(IAction action) {
	}

	public void run(Shell shell, String contextFilePath){

		String projectName = null;
		String ecoreModelName = null;

		DataInputStream dis = null;
		String record = null;

		try {
			File f = new File(contextFilePath);
			FileInputStream fis = new FileInputStream(f);
			BufferedInputStream bis = new BufferedInputStream(fis);
			dis = new DataInputStream(bis);

			int i = 0;

			while ( (record = dis.readLine()) != null ) {
				System.out.println("record = "+record);
				if(i==0){//project name
					projectName = record;
				}else if(i==1){//ecore model name
					ecoreModelName = record;
				}
				i++;
			}

		} catch (IOException e) {
			// catch io errors from FileInputStream or readLine()
			System.out.println("IOException error" + e.getMessage());

		} finally {
			// if the file opened okay, make sure we close it
			if (dis != null) {
				try {
					dis.close();
				} catch (IOException ioe) {
				}
			}
		}
		//get object which represents the workspace  
		IWorkspace workspace = ResourcesPlugin.getWorkspace();  

		//get location of workspace (java.io.File)  
		File workspaceDirectory = workspace.getRoot().getLocation().toFile();

		GenModelHelper genModelHelper = new GenModelHelper(projectName);
		genModelHelper.createGenModel(java.net.URI.create("/"+projectName+"/model/"+ecoreModelName+".ecore"), new File(workspaceDirectory+"/"+projectName+"//model//"+ecoreModelName+".genmodel"), new File(workspaceDirectory+"/"+projectName+"//src"), new Boolean(false));
	}

	@Override
	public void selectionChanged(IAction action, ISelection selection) {
		this.selection =
				selection instanceof IStructuredSelection
				? (IStructuredSelection) selection
						: null;
	}

	@Override
	public void setActivePart(IAction action, IWorkbenchPart targetPart) {
		this.targetPart = targetPart;
	}

}
