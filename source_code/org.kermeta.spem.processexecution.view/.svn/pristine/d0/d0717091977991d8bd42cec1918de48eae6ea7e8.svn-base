package org.kermeta.spem.processexecution.view.actions.impl;

import java.util.Map;

import org.eclipse.draw2d.Label;
import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.resource.ResourceSet;
import org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;
import org.eclipse.emf.ecore.xmi.impl.XMIResourceFactoryImpl;
import org.eclipse.ui.PartInitException;
import org.eclipse.ui.PlatformUI;
import org.kermeta.spem.executioncontext.ExecutionContext;
import org.kermeta.spem.executioncontext.ExecutioncontextPackage;
import org.kermeta.spem.executioncontext.Key;
import org.kermeta.spem.executioncontext.State;
import org.kermeta.spem.executioncontext.StateValue;
import org.kermeta.spem.processexecution.view.HyperlinkFigure;
import org.kermeta.spem.processexecution.view.ProcessPart;
import org.kermeta.spem.processexecution.view.actions.ProcessAction;
import org.kermeta.spem.processexecution.view.TaskFigure;
//import my.group.org.kermeta.spem.execution.taskuserunner.MainRunner;
//import src.main.kmt.KerRichFactory;
//import src.main.kmt.Main;

public class StartAction extends ProcessAction {

	public StartAction(boolean enabled) {
		super(enabled);
		// TODO Auto-generated constructor stub
	}

	public StartAction(boolean enabled, String taskUseName){
		super(enabled, taskUseName);
	}

	public StartAction(boolean enabled, String taskUseName, String contextModelPath){
		super(enabled, taskUseName, contextModelPath);
	}

	@Override
	public void run() {

		//update process view
		ProcessPart view;
		try {
			view = (ProcessPart)PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().showView("ProcessExecution.views.ProcessElementsView");
			for(TaskFigure taskFigure : view.getMediator().getView().getTaskFigures()){
				if(taskFigure.getDescription().equals(taskUseName)){
					for( int i = 0; i < taskFigure.getStdActionsPlate().getChildren().size(); i++){
						Label label = (Label) taskFigure.getStdActionsPlate().getChildren().get(i);
						if(label instanceof HyperlinkFigure){
							HyperlinkFigure hyperlinkFigure = (HyperlinkFigure) label;
							if(hyperlinkFigure.getText() == "on start"){
								hyperlinkFigure.getAction().setEnabled(false);
							}
							if(hyperlinkFigure.getText() == "on do"){
								hyperlinkFigure.getAction().setEnabled(true);
							}
							hyperlinkFigure.repaint();
						}
					}
				}
			}
		} catch (PartInitException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
//		
//		//Execute the task
//		String processModelPath = getProcessModelPath();
//		String behaviorModelPath = getBehaviorModelPath();
//
//		ResourceSet rSet = new ResourceSetImpl();
//		rSet.getResourceFactoryRegistry().getExtensionToFactoryMap();
//		MainRunner.init4eclipse();
//		rSet.getResourceFactoryRegistry().getExtensionToFactoryMap();
//		MainRunner.init();
//		rSet.getResourceFactoryRegistry().getExtensionToFactoryMap();
//		Main m = KerRichFactory.createMain();
//		m.main(processModelPath, behaviorModelPath, taskUseName, contextModelPath);
	}
}
